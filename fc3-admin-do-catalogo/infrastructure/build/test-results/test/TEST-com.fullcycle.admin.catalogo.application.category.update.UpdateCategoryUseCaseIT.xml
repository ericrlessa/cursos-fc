<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.fullcycle.admin.catalogo.application.category.update.UpdateCategoryUseCaseIT" tests="5" skipped="0" failures="0" errors="0" timestamp="2022-09-24T16:01:15" hostname="DESKTOP-TC6IA7B" time="0.046">
  <properties/>
  <testcase name="givenAValidCommand_whenGatewayThrowsRandomException_shouldReturnAnException()" classname="com.fullcycle.admin.catalogo.application.category.update.UpdateCategoryUseCaseIT" time="0.012"/>
  <testcase name="givenACommandWithInvalidID_whenCallsUpdateCategory_shouldReturnNotFoundException()" classname="com.fullcycle.admin.catalogo.application.category.update.UpdateCategoryUseCaseIT" time="0.007"/>
  <testcase name="givenAValidCommand_whenCallsUpdateCategory_shouldReturnCategoryId()" classname="com.fullcycle.admin.catalogo.application.category.update.UpdateCategoryUseCaseIT" time="0.009"/>
  <testcase name="givenAValidInactivateCommand_whenCallsUpdateCategory_shouldReturnInactivateCategoryId()" classname="com.fullcycle.admin.catalogo.application.category.update.UpdateCategoryUseCaseIT" time="0.009"/>
  <testcase name="givenAInvalidName_whenCallsUpdateCategory_thenShouldReturnDomainException()" classname="com.fullcycle.admin.catalogo.application.category.update.UpdateCategoryUseCaseIT" time="0.006"/>
  <system-out><![CDATA[2022-09-24 13:01:15.107  INFO 12914 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.fullcycle.admin.catalogo.application.category.update.UpdateCategoryUseCaseIT], using SpringBootContextLoader
2022-09-24 13:01:15.107  INFO 12914 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.fullcycle.admin.catalogo.application.category.update.UpdateCategoryUseCaseIT]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-09-24 13:01:15.109  INFO 12914 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2022-09-24 13:01:15.109  INFO 12914 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3c0640fa, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3c67b7a9, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@67b6cb6e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@47de4dce, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4951c45f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@488ae823, org.springframework.test.context.transaction.TransactionalTestExecutionListener@19b6b7e7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2c332922, org.springframework.test.context.event.EventPublishingTestExecutionListener@6b8773c7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@74534564, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5876cd86, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6d398593, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3d70dab8, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@53e6c017, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3d123d10]
Hibernate: select genrejpaen0_.id as id1_1_, genrejpaen0_.active as active2_1_, genrejpaen0_.created_at as created_3_1_, genrejpaen0_.deleted_at as deleted_4_1_, genrejpaen0_.name as name5_1_, genrejpaen0_.updated_at as updated_6_1_ from genres genrejpaen0_
Hibernate: select categoryjp0_.id as id1_0_, categoryjp0_.active as active2_0_, categoryjp0_.created_at as created_3_0_, categoryjp0_.deleted_at as deleted_4_0_, categoryjp0_.description as descript5_0_, categoryjp0_.name as name6_0_, categoryjp0_.updated_at as updated_7_0_ from category categoryjp0_
Hibernate: delete from category where id=?
Hibernate: delete from category where id=?
Hibernate: delete from category where id=?
Hibernate: delete from category where id=?
Hibernate: delete from category where id=?
Hibernate: delete from category where id=?
Hibernate: delete from category where id=?
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: insert into category (active, created_at, deleted_at, description, name, updated_at, id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: select genrejpaen0_.id as id1_1_, genrejpaen0_.active as active2_1_, genrejpaen0_.created_at as created_3_1_, genrejpaen0_.deleted_at as deleted_4_1_, genrejpaen0_.name as name5_1_, genrejpaen0_.updated_at as updated_6_1_ from genres genrejpaen0_
Hibernate: select categoryjp0_.id as id1_0_, categoryjp0_.active as active2_0_, categoryjp0_.created_at as created_3_0_, categoryjp0_.deleted_at as deleted_4_0_, categoryjp0_.description as descript5_0_, categoryjp0_.name as name6_0_, categoryjp0_.updated_at as updated_7_0_ from category categoryjp0_
Hibernate: delete from category where id=?
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: select genrejpaen0_.id as id1_1_, genrejpaen0_.active as active2_1_, genrejpaen0_.created_at as created_3_1_, genrejpaen0_.deleted_at as deleted_4_1_, genrejpaen0_.name as name5_1_, genrejpaen0_.updated_at as updated_6_1_ from genres genrejpaen0_
Hibernate: select categoryjp0_.id as id1_0_, categoryjp0_.active as active2_0_, categoryjp0_.created_at as created_3_0_, categoryjp0_.deleted_at as deleted_4_0_, categoryjp0_.description as descript5_0_, categoryjp0_.name as name6_0_, categoryjp0_.updated_at as updated_7_0_ from category categoryjp0_
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: insert into category (active, created_at, deleted_at, description, name, updated_at, id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from category categoryjp0_
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: update category set active=?, created_at=?, deleted_at=?, description=?, name=?, updated_at=? where id=?
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: select genrejpaen0_.id as id1_1_, genrejpaen0_.active as active2_1_, genrejpaen0_.created_at as created_3_1_, genrejpaen0_.deleted_at as deleted_4_1_, genrejpaen0_.name as name5_1_, genrejpaen0_.updated_at as updated_6_1_ from genres genrejpaen0_
Hibernate: select categoryjp0_.id as id1_0_, categoryjp0_.active as active2_0_, categoryjp0_.created_at as created_3_0_, categoryjp0_.deleted_at as deleted_4_0_, categoryjp0_.description as descript5_0_, categoryjp0_.name as name6_0_, categoryjp0_.updated_at as updated_7_0_ from category categoryjp0_
Hibernate: delete from category where id=?
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: insert into category (active, created_at, deleted_at, description, name, updated_at, id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: update category set active=?, created_at=?, deleted_at=?, description=?, name=?, updated_at=? where id=?
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: select genrejpaen0_.id as id1_1_, genrejpaen0_.active as active2_1_, genrejpaen0_.created_at as created_3_1_, genrejpaen0_.deleted_at as deleted_4_1_, genrejpaen0_.name as name5_1_, genrejpaen0_.updated_at as updated_6_1_ from genres genrejpaen0_
Hibernate: select categoryjp0_.id as id1_0_, categoryjp0_.active as active2_0_, categoryjp0_.created_at as created_3_0_, categoryjp0_.deleted_at as deleted_4_0_, categoryjp0_.description as descript5_0_, categoryjp0_.name as name6_0_, categoryjp0_.updated_at as updated_7_0_ from category categoryjp0_
Hibernate: delete from category where id=?
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
Hibernate: insert into category (active, created_at, deleted_at, description, name, updated_at, id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select categoryjp0_.id as id1_0_0_, categoryjp0_.active as active2_0_0_, categoryjp0_.created_at as created_3_0_0_, categoryjp0_.deleted_at as deleted_4_0_0_, categoryjp0_.description as descript5_0_0_, categoryjp0_.name as name6_0_0_, categoryjp0_.updated_at as updated_7_0_0_ from category categoryjp0_ where categoryjp0_.id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
